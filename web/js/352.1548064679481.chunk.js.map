{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/apps/organizations/components/OrganizationEdit.tsx"],"names":["__webpack_require__","d","__webpack_exports__","updateOrganization","deleteOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","key","changes","dispatch","then","Object","OrganizationEdit","_super","props","_this","call","this","mounted","handleAvatarInputChange","event","value","target","setState","avatar","changeAvatarImage","avatarImage","handleSubmit","preventDefault","state","description","name","url","loading","organization","stopLoading","lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default","__extends","prototype","componentDidMount","componentWillUnmount","render","title","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_1__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","onSubmit","htmlFor","disabled","id","maxLength","onChange","e","required","type","placeholder","_components_common_OrganizationAvatar__WEBPACK_IMPORTED_MODULE_4__","undefined","rows","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_6__","react_redux__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"js/352.1548064679481.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\nexport const createOrganization = (organization: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.createOrganization(organization).then((organization: T.Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  });\n};\n\nexport const updateOrganization = (key: string, changes: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  });\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n  });\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { debounce } from 'lodash';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { updateOrganization } from '../actions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface DispatchProps {\n  updateOrganization: (organization: string, changes: T.OrganizationBase) => Promise<any>;\n}\n\ninterface OwnProps {\n  organization: T.Organization;\n}\n\ntype Props = OwnProps & DispatchProps;\n\ninterface State {\n  loading: boolean;\n  avatar: string;\n  avatarImage: string;\n  description: string;\n  name: string;\n  url: string;\n}\n\nexport class OrganizationEdit extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n      avatar: props.organization.avatar || '',\n      avatarImage: props.organization.avatar || '',\n      description: props.organization.description || '',\n      name: props.organization.name,\n      url: props.organization.url || ''\n    };\n    this.changeAvatarImage = debounce(this.changeAvatarImage, 500);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleAvatarInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.setState({ avatar: value });\n    this.changeAvatarImage(value);\n  };\n\n  changeAvatarImage = (value: string) => {\n    this.setState({ avatarImage: value });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const changes = {\n      avatar: this.state.avatar,\n      description: this.state.description,\n      name: this.state.name,\n      url: this.state.url\n    };\n    this.setState({ loading: true });\n    this.props\n      .updateOrganization(this.props.organization.key, changes)\n      .then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const title = translate('organization.edit');\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={title} />\n\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{title}</h1>\n        </header>\n\n        <div className=\"boxed-group boxed-group-inner\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-name\">\n                {translate('organization.name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-name\"\n                maxLength={255}\n                name=\"name\"\n                onChange={e => this.setState({ name: e.target.value })}\n                required={true}\n                type=\"text\"\n                value={this.state.name}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.name.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-avatar\">{translate('organization.avatar')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-avatar\"\n                maxLength={256}\n                name=\"avatar\"\n                onChange={this.handleAvatarInputChange}\n                placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n                type=\"text\"\n                value={this.state.avatar}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.avatar.description')}\n              </div>\n              {(this.state.avatarImage || this.state.name) && (\n                <div className=\"spacer-top spacer-bottom\">\n                  <div className=\"little-spacer-bottom\">\n                    {translate('organization.avatar.preview')}\n                    {':'}\n                  </div>\n                  <OrganizationAvatar\n                    organization={{\n                      avatar: this.state.avatarImage || undefined,\n                      name: this.state.name || ''\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-description\">{translate('description')}</label>\n              <textarea\n                disabled={this.state.loading}\n                id=\"organization-description\"\n                maxLength={256}\n                name=\"description\"\n                onChange={e => this.setState({ description: e.target.value })}\n                rows={3}\n                value={this.state.description}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.description.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-url\">{translate('organization.url')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-url\"\n                maxLength={256}\n                name=\"url\"\n                onChange={e => this.setState({ url: e.target.value })}\n                type=\"text\"\n                value={this.state.url}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.url.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <SubmitButton disabled={this.state.loading}>{translate('save')}</SubmitButton>\n              {this.state.loading && <i className=\"spinner spacer-left\" />}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { updateOrganization: updateOrganization as any };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(OrganizationEdit);\n"],"sourceRoot":""}