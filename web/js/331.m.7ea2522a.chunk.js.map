{"version":3,"sources":["webpack:///./src/main/js/apps/projectDeletion/Header.tsx","webpack:///./src/main/js/apps/projectDeletion/Form.tsx","webpack:///./src/main/js/apps/projectDeletion/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["Header","props","qualifier","component","description","includes","Object","l10n","index_js_exposed","className","projectDeletion_Form","es","[object Object]","this","handleDelete","isProject","deleteMethod","components","redirectTo","key","then","router","replace","ConfirmButton","confirmButtonText","isDestructive","modalBody","name","modalHeader","onConfirm","onClick","buttons","id","App","Helmet_default","a","title","__webpack_require__","d","__webpack_exports__","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","_Modal__WEBPACK_IMPORTED_MODULE_1__","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","confirmData","renderModalContent","_this$props","confirmDisable","_this$props$cancelBut","cancelButtonText","loading","autoFocus","undefined","disabled","_ModalButton__WEBPACK_IMPORTED_MODULE_1__","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","renderConfirmModal"],"mappings":"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","file":"js/331.m.7ea2522a.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'qualifier'>;\n}\n\nexport default function Header(props: Props) {\n  const { qualifier } = props.component;\n  let description: string;\n  if (['VW', 'SVW'].includes(qualifier)) {\n    description = translate('portfolio_deletion.page.description');\n  } else if (qualifier === 'APP') {\n    description = translate('application_deletion.page.description');\n  } else {\n    description = translate('project_deletion.page.description');\n  }\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('deletion.page')}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { deleteProject, deletePortfolio } from '../../api/components';\nimport { Button } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default withRouter(\n  class Form extends React.PureComponent<Props & WithRouterProps> {\n    handleDelete = () => {\n      const { component } = this.props;\n      const isProject = component.qualifier === 'TRK';\n      const deleteMethod = isProject ? deleteProject : deletePortfolio;\n      const redirectTo = isProject ? '/' : '/portfolios';\n      return deleteMethod(component.key).then(() => {\n        this.props.router.replace(redirectTo);\n      });\n    };\n\n    render() {\n      const { component } = this.props;\n      return (\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          isDestructive={true}\n          modalBody={translateWithParameters(\n            'project_deletion.delete_resource_confirmation',\n            component.name\n          )}\n          modalHeader={translate('qualifier.delete', component.qualifier)}\n          onConfirm={this.handleDelete}>\n          {({ onClick }) => (\n            <Button className=\"button-red\" id=\"delete-project\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      );\n    }\n  }\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Form from './Form';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default function App(props: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Helmet title={translate('deletion.page')} />\n      <Header component={props.component} />\n      <Form component={props.component} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    const { cancelButtonText = translate('cancel') } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        cancelButtonText={this.props.cancelButtonText}\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}