{"version":3,"sources":["webpack:///./src/main/js/app/components/notifications/NotificationsSidebar.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","NotificationsSidebar","isUnread","Notification","Feature","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","_components_icons_components_ClearIcon__WEBPACK_IMPORTED_MODULE_2__","_components_intl_DateFormatter__WEBPACK_IMPORTED_MODULE_3__","_components_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_4__","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_5__","_helpers_dates__WEBPACK_IMPORTED_MODULE_6__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","props","loading","loadingMore","news","notificationsLastReadDate","paging","onRequestClose","onClose","className","Object","href","onClick","timeout","map","slice","index","key","publicationDate","notification","unread","total","length","fetchMoreFeatureNews","notificationDate","lastReadDate","_a","date","long","features","feature","categories","category","name","style","backgroundColor","color","description","readMore","rel","target","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","formatterOption","year","month","day","longFormatterOption","DateFormatter","children","react_intl__WEBPACK_IMPORTED_MODULE_1__","value","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/342.1548064679481.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport ClearIcon from '../../../components/icons-components/ClearIcon';\nimport DateFormatter from '../../../components/intl/DateFormatter';\nimport DeferredSpinner from '../../../components/common/DeferredSpinner';\nimport Modal from '../../../components/controls/Modal';\nimport { PrismicFeatureNews } from '../../../api/news';\nimport { differenceInSeconds } from '../../../helpers/dates';\nimport { translate } from '../../../helpers/l10n';\n\nexport interface Props {\n  fetchMoreFeatureNews: () => void;\n  loading: boolean;\n  loadingMore: boolean;\n  news: PrismicFeatureNews[];\n  onClose: () => void;\n  notificationsLastReadDate?: Date;\n  paging?: T.Paging;\n}\n\nexport default function NotificationsSidebar(props: Props) {\n  const { loading, loadingMore, news, notificationsLastReadDate, paging } = props;\n  return (\n    <Modal onRequestClose={props.onClose}>\n      <div className=\"notifications-sidebar\">\n        <div className=\"notifications-sidebar-top\">\n          <h3>{translate('embed_docs.whats_new')}</h3>\n          <a className=\"close\" href=\"#\" onClick={props.onClose}>\n            <ClearIcon />\n          </a>\n        </div>\n        <div className=\"notifications-sidebar-content\">\n          {loading ? (\n            <div className=\"text-center\">\n              <DeferredSpinner className=\"big-spacer-top\" timeout={200} />\n            </div>\n          ) : (\n            news.map((slice, index) => (\n              <Notification\n                key={slice.publicationDate}\n                notification={slice}\n                unread={isUnread(index, slice.publicationDate, notificationsLastReadDate)}\n              />\n            ))\n          )}\n        </div>\n        {!loading &&\n          paging &&\n          paging.total > news.length && (\n            <div className=\"notifications-sidebar-footer\">\n              <div className=\"spacer-top note text-center\">\n                <a className=\"spacer-left\" href=\"#\" onClick={props.fetchMoreFeatureNews}>\n                  {translate('show_more')}\n                </a>\n                {loadingMore && (\n                  <DeferredSpinner className=\"vertical-bottom spacer-left position-absolute\" />\n                )}\n              </div>\n            </div>\n          )}\n      </div>\n    </Modal>\n  );\n}\n\nexport function isUnread(index: number, notificationDate: string, lastReadDate?: Date) {\n  return !lastReadDate ? index < 1 : differenceInSeconds(notificationDate, lastReadDate) > 0;\n}\n\ninterface NotificationProps {\n  notification: PrismicFeatureNews;\n  unread: boolean;\n}\n\nexport function Notification({ notification, unread }: NotificationProps) {\n  return (\n    <div className={classNames('notifications-sidebar-slice', { unread })}>\n      <h4>\n        <DateFormatter date={notification.publicationDate} long={false} />\n      </h4>\n      {notification.features.map((feature, index) => (\n        <Feature feature={feature} key={index} />\n      ))}\n    </div>\n  );\n}\n\ninterface FeatureProps {\n  feature: PrismicFeatureNews['features'][0];\n}\n\nexport function Feature({ feature }: FeatureProps) {\n  return (\n    <div className=\"feature\">\n      <ul className=\"categories spacer-bottom\">\n        {feature.categories.map(category => (\n          <li key={category.name} style={{ backgroundColor: category.color }}>\n            {category.name}\n          </li>\n        ))}\n      </ul>\n      <span>{feature.description}</span>\n      {feature.readMore && (\n        <a\n          className=\"learn-more\"\n          href={feature.readMore}\n          rel=\"noopener noreferrer nofollow\"\n          target=\"_blank\">\n          {translate('learn_more')}\n        </a>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n"],"sourceRoot":""}