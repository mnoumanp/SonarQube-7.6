{"version":3,"sources":["webpack:///./src/main/js/apps/projectKey/UpdateForm.tsx","webpack:///./src/main/js/apps/projectKey/Key.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["_super","UpdateForm","_this","apply","this","arguments","state","handleChange","event","newKey","currentTarget","value","setState","handleReset","undefined","__extends","prototype","render","component","props","key","hasChanged","index_js_exposed","ConfirmButton","confirmButtonText","Object","l10n","confirmData","modalBody","name","className","modalHeader","onConfirm","onKeyChange","_a","onFormSubmit","onSubmit","id","onChange","placeholder","required","type","buttons","disabled","onClick","Key_Key","Key","handleChangeKey","components","from","to","then","RecentHistory","remove","router","replace","pathname","query","Key_extends","Helmet_default","a","title","projectKey_UpdateForm","__webpack_exports__","es","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","mounted","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","componentDidMount","componentWillUnmount","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","children","onCloseClick","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","handleSubmit","renderModalContent","_b","confirmDisable","isDestructive","_c","cancelButtonText","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","autoFocus","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/332.1548064679481.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, SubmitButton } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n  onKeyChange: (newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleReset = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey != null ? newKey : component.key;\n    const hasChanged = value !== component.key;\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('update_verb')}\n        confirmData={newKey}\n        modalBody={\n          <>\n            {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n            <div className=\"spacer-top\">\n              {translate('update_key.old_key')}\n              {': '}\n              <strong>{component.key}</strong>\n            </div>\n            <div className=\"spacer-top\">\n              {translate('update_key.new_key')}\n              {': '}\n              <strong>{newKey}</strong>\n            </div>\n          </>\n        }\n        modalHeader={translate('update_key.page')}\n        onConfirm={this.props.onKeyChange}>\n        {({ onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <input\n              className=\"input-super-large\"\n              id=\"update-key-new-key\"\n              onChange={this.handleChange}\n              placeholder={translate('update_key.new_key')}\n              required={true}\n              type=\"text\"\n              value={value}\n            />\n\n            <div className=\"spacer-top\">\n              <SubmitButton disabled={!hasChanged} id=\"update-key-submit\">\n                {translate('update_verb')}\n              </SubmitButton>\n\n              <Button\n                className=\"spacer-left\"\n                disabled={!hasChanged}\n                id=\"update-key-reset\"\n                onClick={this.handleReset}\n                type=\"reset\">\n                {translate('reset_verb')}\n              </Button>\n            </div>\n          </form>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport UpdateForm from './UpdateForm';\nimport { changeKey } from '../../api/components';\nimport RecentHistory from '../../app/components/RecentHistory';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n}\n\nexport class Key extends React.PureComponent<Props & WithRouterProps> {\n  handleChangeKey = (newKey: string) => {\n    return changeKey({ from: this.props.component.key, to: newKey }).then(() => {\n      RecentHistory.remove(this.props.component.key);\n      this.props.router.replace({ pathname: '/project/key', query: { id: newKey } });\n    });\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet title={translate('update_key.page')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n          <div className=\"page-description\">{translate('update_key.page.description')}</div>\n        </header>\n        <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    const { cancelButtonText = translate('cancel') } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        cancelButtonText={this.props.cancelButtonText}\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}