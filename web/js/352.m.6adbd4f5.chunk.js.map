{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationEdit.tsx","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["OrganizationEdit","react__WEBPACK_IMPORTED_MODULE_1__","[object Object]","props","super","this","mounted","handleAvatarInputChange","event","value","target","setState","avatar","changeAvatarImage","avatarImage","handleSubmit","preventDefault","changes","state","description","name","url","loading","updateOrganization","organization","key","then","stopLoading","lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default","title","Object","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","onSubmit","htmlFor","disabled","id","maxLength","onChange","e","required","type","placeholder","_components_common_OrganizationAvatar__WEBPACK_IMPORTED_MODULE_4__","undefined","rows","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_5__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__","react_redux__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","d","deleteOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","dispatch"],"mappings":"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","file":"js/352.m.6adbd4f5.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { debounce } from 'lodash';\nimport OrganizationAvatar from '../../../components/common/OrganizationAvatar';\nimport { SubmitButton } from '../../../components/ui/buttons';\nimport { updateOrganization } from '../actions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface DispatchProps {\n  updateOrganization: (organization: string, changes: T.OrganizationBase) => Promise<any>;\n}\n\ninterface OwnProps {\n  organization: T.Organization;\n}\n\ntype Props = OwnProps & DispatchProps;\n\ninterface State {\n  loading: boolean;\n  avatar: string;\n  avatarImage: string;\n  description: string;\n  name: string;\n  url: string;\n}\n\nexport class OrganizationEdit extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n      avatar: props.organization.avatar || '',\n      avatarImage: props.organization.avatar || '',\n      description: props.organization.description || '',\n      name: props.organization.name,\n      url: props.organization.url || ''\n    };\n    this.changeAvatarImage = debounce(this.changeAvatarImage, 500);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleAvatarInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    this.setState({ avatar: value });\n    this.changeAvatarImage(value);\n  };\n\n  changeAvatarImage = (value: string) => {\n    this.setState({ avatarImage: value });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const changes = {\n      avatar: this.state.avatar,\n      description: this.state.description,\n      name: this.state.name,\n      url: this.state.url\n    };\n    this.setState({ loading: true });\n    this.props\n      .updateOrganization(this.props.organization.key, changes)\n      .then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const title = translate('organization.edit');\n    return (\n      <div className=\"page page-limited\">\n        <Helmet title={title} />\n\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{title}</h1>\n        </header>\n\n        <div className=\"boxed-group boxed-group-inner\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-name\">\n                {translate('organization.name')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-name\"\n                maxLength={255}\n                name=\"name\"\n                onChange={e => this.setState({ name: e.target.value })}\n                required={true}\n                type=\"text\"\n                value={this.state.name}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.name.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-avatar\">{translate('organization.avatar')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-avatar\"\n                maxLength={256}\n                name=\"avatar\"\n                onChange={this.handleAvatarInputChange}\n                placeholder={translate('onboarding.create_organization.avatar.placeholder')}\n                type=\"text\"\n                value={this.state.avatar}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.avatar.description')}\n              </div>\n              {(this.state.avatarImage || this.state.name) && (\n                <div className=\"spacer-top spacer-bottom\">\n                  <div className=\"little-spacer-bottom\">\n                    {translate('organization.avatar.preview')}\n                    {':'}\n                  </div>\n                  <OrganizationAvatar\n                    organization={{\n                      avatar: this.state.avatarImage || undefined,\n                      name: this.state.name || ''\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-description\">{translate('description')}</label>\n              <textarea\n                disabled={this.state.loading}\n                id=\"organization-description\"\n                maxLength={256}\n                name=\"description\"\n                onChange={e => this.setState({ description: e.target.value })}\n                rows={3}\n                value={this.state.description}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.description.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"organization-url\">{translate('organization.url')}</label>\n              <input\n                disabled={this.state.loading}\n                id=\"organization-url\"\n                maxLength={256}\n                name=\"url\"\n                onChange={e => this.setState({ url: e.target.value })}\n                type=\"text\"\n                value={this.state.url}\n              />\n              <div className=\"modal-field-description\">\n                {translate('organization.url.description')}\n              </div>\n            </div>\n            <div className=\"modal-field\">\n              <SubmitButton disabled={this.state.loading}>{translate('save')}</SubmitButton>\n              {this.state.loading && <i className=\"spinner spacer-left\" />}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { updateOrganization: updateOrganization as any };\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(OrganizationEdit);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\nexport const createOrganization = (organization: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.createOrganization(organization).then((organization: T.Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  });\n};\n\nexport const updateOrganization = (key: string, changes: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  });\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n  });\n};\n"],"sourceRoot":""}