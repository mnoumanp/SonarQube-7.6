{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/apps/organizations/actions.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","OrganizationDelete","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","react_redux__WEBPACK_IMPORTED_MODULE_2__","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_3__","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_4__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","_actions__WEBPACK_IMPORTED_MODULE_6__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_7__","_api_organizations__WEBPACK_IMPORTED_MODULE_8__","_helpers_system__WEBPACK_IMPORTED_MODULE_9__","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_10__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_11__","_app_utils_addGlobalSuccessMessage__WEBPACK_IMPORTED_MODULE_12__","[object Object]","this","mounted","state","verify","fetchOrganizationPlanInfo","Object","props","organization","key","then","billingInfo","setState","hasPaidPlan","subscription","status","handleInput","event","currentTarget","value","isVerified","toLowerCase","name","onDelete","deleteOrganization","router","replace","pathname","confirmationMessage","title","a","className","message","confirmButtonText","confirmDisable","isDestructive","modalBody","variant","htmlFor","autoFocus","id","onChange","type","modalHeader","onConfirm","onClick","mapDispatchToProps","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","_Modal__WEBPACK_IMPORTED_MODULE_1__","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","confirmData","renderModalContent","_this$props","_this$props$cancelBut","cancelButtonText","loading","undefined","disabled","ConfirmButton","_ModalButton__WEBPACK_IMPORTED_MODULE_1__","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","renderConfirmModal","addGlobalSuccessMessage","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","dispatch","updateOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","changes"],"mappings":"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","file":"js/317.m.4c7c0904.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { Alert } from '../../../components/ui/Alert';\nimport { withRouter, Router } from '../../../components/hoc/withRouter';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<T.Organization, 'key' | 'name'>;\n  router: Pick<Router, 'replace'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n  verify: string;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { verify: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ verify: event.currentTarget.value });\n  };\n\n  isVerified = () => {\n    return this.state.verify.toLowerCase() === this.props.organization.name.toLowerCase();\n  };\n\n  onDelete = () => {\n    const { organization } = this.props;\n    return this.props.deleteOrganization(organization.key).then(() => {\n      if (this.state.hasPaidPlan) {\n        this.props.router.replace({\n          pathname: '/feedback/downgrade',\n          state: {\n            confirmationMessage: translateWithParameters(\n              'organization.deleted_x',\n              organization.name\n            ),\n            organization,\n            title: translate('billing.downgrade.reason.title_deleted')\n          }\n        });\n      } else {\n        addGlobalSuccessMessage(translate('organization.deleted'));\n        this.props.router.replace('/');\n      }\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    const title = translate('organization.delete');\n    return (\n      <>\n        <Helmet title={title} />\n        <div className=\"page page-limited\">\n          <header className=\"page-header\">\n            <h1 className=\"page-title\">{title}</h1>\n            <div className=\"page-description\">\n              <InstanceMessage message={translate('organization.delete.description')} />\n            </div>\n          </header>\n          <ConfirmButton\n            confirmButtonText={translate('delete')}\n            confirmDisable={!this.isVerified()}\n            isDestructive={true}\n            modalBody={\n              <div>\n                {hasPaidPlan && (\n                  <Alert variant=\"warning\">\n                    {translate('organization.delete.sonarcloud.paid_plan_info')}\n                  </Alert>\n                )}\n                <p>{translate('organization.delete.question')}</p>\n                <div className=\"spacer-top\">\n                  <label htmlFor=\"downgrade-organization-name\">\n                    {translate('billing.downgrade.modal.type_to_proceed')}\n                  </label>\n                  <div className=\"little-spacer-top\">\n                    <input\n                      autoFocus={true}\n                      className=\"input-super-large\"\n                      id=\"downgrade-organization-name\"\n                      onChange={this.handleInput}\n                      type=\"text\"\n                      value={this.state.verify}\n                    />\n                  </div>\n                </div>\n              </div>\n            }\n            modalHeader={translateWithParameters(\n              'organization.delete_x',\n              this.props.organization.name\n            )}\n            onConfirm={this.onDelete}>\n            {({ onClick }) => (\n              <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n                {translate('delete')}\n              </Button>\n            )}\n          </ConfirmButton>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(OrganizationDelete)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    const { cancelButtonText = translate('cancel') } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        cancelButtonText={this.props.cancelButtonText}\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\nexport const createOrganization = (organization: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.createOrganization(organization).then((organization: T.Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  });\n};\n\nexport const updateOrganization = (key: string, changes: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  });\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n  });\n};\n"],"sourceRoot":""}