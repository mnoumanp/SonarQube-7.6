{"version":3,"sources":["webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts"],"names":["__webpack_require__","d","__webpack_exports__","updateOrganization","deleteOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","key","changes","dispatch","then","Object","OrganizationDelete","_super","_this","apply","this","arguments","mounted","state","verify","fetchOrganizationPlanInfo","_helpers_system__WEBPACK_IMPORTED_MODULE_9__","_api_organizations__WEBPACK_IMPORTED_MODULE_8__","props","organization","billingInfo","setState","hasPaidPlan","subscription","status","handleInput","event","currentTarget","value","isVerified","toLowerCase","name","onDelete","router","replace","pathname","confirmationMessage","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","title","_app_utils_addGlobalSuccessMessage__WEBPACK_IMPORTED_MODULE_12__","__extends","prototype","componentDidMount","componentWillUnmount","render","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","a","className","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_4__","message","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_3__","confirmButtonText","confirmDisable","isDestructive","modalBody","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_10__","variant","htmlFor","autoFocus","id","onChange","type","modalHeader","onConfirm","_a","onClick","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_7__","mapDispatchToProps","_actions__WEBPACK_IMPORTED_MODULE_6__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_11__","react_redux__WEBPACK_IMPORTED_MODULE_2__","Modal","react_modal__WEBPACK_IMPORTED_MODULE_1__","__assign","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","children","onCloseClick","onFormSubmit","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","handleSubmit","confirmData","renderModalContent","_b","_c","cancelButtonText","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","undefined","disabled","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","ConfirmButton","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__","addGlobalSuccessMessage","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/317.1548064679481.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\n\nexport const createOrganization = (organization: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.createOrganization(organization).then((organization: T.Organization) => {\n    dispatch(actions.createOrganization(organization));\n    dispatch(\n      addGlobalSuccessMessage(translateWithParameters('organization.created', organization.name))\n    );\n    return organization;\n  });\n};\n\nexport const updateOrganization = (key: string, changes: T.OrganizationBase) => (\n  dispatch: Dispatch<any>\n) => {\n  return api.updateOrganization(key, changes).then(() => {\n    dispatch(actions.updateOrganization(key, changes));\n    dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n  });\n};\n\nexport const deleteOrganization = (key: string) => (dispatch: Dispatch<any>) => {\n  return api.deleteOrganization(key).then(() => {\n    dispatch(actions.deleteOrganization(key));\n  });\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { Alert } from '../../../components/ui/Alert';\nimport { withRouter, Router } from '../../../components/hoc/withRouter';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<T.Organization, 'key' | 'name'>;\n  router: Pick<Router, 'replace'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n  verify: string;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { verify: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ verify: event.currentTarget.value });\n  };\n\n  isVerified = () => {\n    return this.state.verify.toLowerCase() === this.props.organization.name.toLowerCase();\n  };\n\n  onDelete = () => {\n    const { organization } = this.props;\n    return this.props.deleteOrganization(organization.key).then(() => {\n      if (this.state.hasPaidPlan) {\n        this.props.router.replace({\n          pathname: '/feedback/downgrade',\n          state: {\n            confirmationMessage: translateWithParameters(\n              'organization.deleted_x',\n              organization.name\n            ),\n            organization,\n            title: translate('billing.downgrade.reason.title_deleted')\n          }\n        });\n      } else {\n        addGlobalSuccessMessage(translate('organization.deleted'));\n        this.props.router.replace('/');\n      }\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    const title = translate('organization.delete');\n    return (\n      <>\n        <Helmet title={title} />\n        <div className=\"page page-limited\">\n          <header className=\"page-header\">\n            <h1 className=\"page-title\">{title}</h1>\n            <div className=\"page-description\">\n              <InstanceMessage message={translate('organization.delete.description')} />\n            </div>\n          </header>\n          <ConfirmButton\n            confirmButtonText={translate('delete')}\n            confirmDisable={!this.isVerified()}\n            isDestructive={true}\n            modalBody={\n              <div>\n                {hasPaidPlan && (\n                  <Alert variant=\"warning\">\n                    {translate('organization.delete.sonarcloud.paid_plan_info')}\n                  </Alert>\n                )}\n                <p>{translate('organization.delete.question')}</p>\n                <div className=\"spacer-top\">\n                  <label htmlFor=\"downgrade-organization-name\">\n                    {translate('billing.downgrade.modal.type_to_proceed')}\n                  </label>\n                  <div className=\"little-spacer-top\">\n                    <input\n                      autoFocus={true}\n                      className=\"input-super-large\"\n                      id=\"downgrade-organization-name\"\n                      onChange={this.handleInput}\n                      type=\"text\"\n                      value={this.state.verify}\n                    />\n                  </div>\n                </div>\n              </div>\n            }\n            modalHeader={translateWithParameters(\n              'organization.delete_x',\n              this.props.organization.name\n            )}\n            onConfirm={this.onDelete}>\n            {({ onClick }) => (\n              <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n                {translate('delete')}\n              </Button>\n            )}\n          </ConfirmButton>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(OrganizationDelete)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    const { cancelButtonText = translate('cancel') } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        cancelButtonText={this.props.cancelButtonText}\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n"],"sourceRoot":""}