{"version":3,"sources":["webpack:///./src/main/js/apps/projectKey/UpdateForm.tsx","webpack:///./src/main/js/apps/projectKey/Key.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["UpdateForm_UpdateForm","index_js_exposed","[object Object]","this","state","handleChange","event","newKey","currentTarget","value","setState","handleReset","undefined","component","props","key","hasChanged","ConfirmButton","confirmButtonText","Object","l10n","confirmData","modalBody","name","className","modalHeader","onConfirm","onKeyChange","onFormSubmit","onSubmit","id","onChange","placeholder","required","type","buttons","disabled","onClick","__webpack_require__","d","__webpack_exports__","Key_Key","handleChangeKey","components","from","to","then","RecentHistory","remove","router","replace","pathname","query","Helmet_default","a","title","es","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-medium","medium","modal-large","large","modal-simple","simple","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","_Modal__WEBPACK_IMPORTED_MODULE_1__","mounted","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","contentLabel","header","onRequestClose","children","onCloseClick","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","renderModalContent","_this$props","confirmDisable","isDestructive","_this$props$cancelBut","cancelButtonText","loading","autoFocus","_ModalButton__WEBPACK_IMPORTED_MODULE_1__","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","renderConfirmModal"],"mappings":"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","file":"js/332.m.315cd6a6.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, SubmitButton } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n  onKeyChange: (newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleReset = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey != null ? newKey : component.key;\n    const hasChanged = value !== component.key;\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('update_verb')}\n        confirmData={newKey}\n        modalBody={\n          <>\n            {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n            <div className=\"spacer-top\">\n              {translate('update_key.old_key')}\n              {': '}\n              <strong>{component.key}</strong>\n            </div>\n            <div className=\"spacer-top\">\n              {translate('update_key.new_key')}\n              {': '}\n              <strong>{newKey}</strong>\n            </div>\n          </>\n        }\n        modalHeader={translate('update_key.page')}\n        onConfirm={this.props.onKeyChange}>\n        {({ onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <input\n              className=\"input-super-large\"\n              id=\"update-key-new-key\"\n              onChange={this.handleChange}\n              placeholder={translate('update_key.new_key')}\n              required={true}\n              type=\"text\"\n              value={value}\n            />\n\n            <div className=\"spacer-top\">\n              <SubmitButton disabled={!hasChanged} id=\"update-key-submit\">\n                {translate('update_verb')}\n              </SubmitButton>\n\n              <Button\n                className=\"spacer-left\"\n                disabled={!hasChanged}\n                id=\"update-key-reset\"\n                onClick={this.handleReset}\n                type=\"reset\">\n                {translate('reset_verb')}\n              </Button>\n            </div>\n          </form>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport UpdateForm from './UpdateForm';\nimport { changeKey } from '../../api/components';\nimport RecentHistory from '../../app/components/RecentHistory';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n}\n\nexport class Key extends React.PureComponent<Props & WithRouterProps> {\n  handleChangeKey = (newKey: string) => {\n    return changeKey({ from: this.props.component.key, to: newKey }).then(() => {\n      RecentHistory.remove(this.props.component.key);\n      this.props.router.replace({ pathname: '/project/key', query: { id: newKey } });\n    });\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet title={translate('update_key.page')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n          <div className=\"page-description\">{translate('update_key.page.description')}</div>\n        </header>\n        <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\ninterface OwnProps {\n  medium?: boolean;\n  noBackdrop?: boolean;\n  large?: boolean;\n  simple?: true;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & OwnProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-medium': props.medium,\n        'modal-large': props.large,\n        'modal-simple': props.simple\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    const { cancelButtonText = translate('cancel') } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        cancelButtonText={this.props.cancelButtonText}\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}